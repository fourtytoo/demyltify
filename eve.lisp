(in-package :demyltify)

;; This is how I spy on other milters
(defun eavesdrop-milter (mta-port milter-port)
  (labels ((fd-set (fd)
	     (ash 1 fd))
	   (fd-set? (fd set)
	     (not (zerop (logand (fd-set fd) set)))))
    (macrolet ((enqueue (obj queue)
		 `(setf ,queue (nconc ,queue (list ,obj))))
	       (dequeue (queue)
		 `(pop ,queue))
	       (empty-queue? (queue)
		 `(null ,queue)))
      (do-connections (mta-stream mta-port)
	(let ((mta-stream (socket-stream socket)))
	  (format t "connection from MTA (~S) ~%" mta-stream) (finish-output)
	  (with-open-socket (milter-fd (connect-to-inet-socket "localhost" milter-port))
	    (format t "connected to milter (~S)~%" milter-fd) (finish-output)
	    (with-socket-stream (milter-stream milter-fd)
	      (let ((milter->mta-queue '())
		    (mta->milter-queue '())
		    (mta-fd (sys:fd-stream-fd mta-stream)))
		(loop
		   (multiple-value-bind (ok rfd wfd xfd)
		       (unix:unix-select (1+ (max mta-fd milter-fd))
					 (the (unsigned-byte 32)
					      (logior (fd-set mta-fd)
						      (fd-set milter-fd)))
					 (the (unsigned-byte 32)
					      (logior (if (empty-queue? milter->mta-queue) 0 (fd-set mta-fd))
						      (if (empty-queue? mta->milter-queue) 0 (fd-set milter-fd))))
					 0 1)
		     (declare (ignore xfd))
		     (unless ok
		       (error "select error ~A" rfd))
		     (format t "rfd=~A wfd=~A~%" rfd wfd) (finish-output)
		     (when (fd-set? mta-fd rfd)
		       (multiple-value-bind (command data)
			   (receive-packet mta-stream)
			 (format t "MTA-> ~S ~S~%" command data)
			 (enqueue (list command data) mta->milter-queue)))
		     (when (fd-set? milter-fd rfd)
		       (multiple-value-bind (command data)
			   (receive-packet milter-stream)
			 (format t "milter-> ~S ~S~%" command data)
			 (enqueue (list command data) milter->mta-queue)))
		     (when (fd-set? mta-fd wfd)
		       (destructuring-bind (command data) (dequeue milter->mta-queue)
			 (format t "->MTA ~S ~S~%" command data)
			 (send-packet mta-stream command data)))
		     (when (fd-set? milter-fd wfd)
		       (destructuring-bind (command data) (dequeue mta->milter-queue)
			 (format t "->milter ~S ~S~%" command data)
			 (send-packet milter-stream command data)))))))))))))
